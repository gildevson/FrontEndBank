{"ast":null,"code":"// services/userService.js\nexport async function createUser(user) {\n  try {\n    const response = await fetch('http://localhost:3000/api/users', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/json'\n      },\n      body: JSON.stringify(user)\n    });\n    if (!response.ok) {\n      const errorData = await response.json();\n      if (response.status === 409) {\n        throw new Error('Usuário já existe.');\n      }\n      throw new Error('Falha ao criar usuário: ' + (errorData.message || response.statusText));\n    }\n    return await response.json(); // Retorna a resposta do servidor, presumivelmente os dados do usuário criado.\n  } catch (error) {\n    console.error('Erro ao criar usuário:', error);\n    throw error; // Propaga o erro para ser tratado por quem chama essa função.\n  }\n}\nexport async function fetchUsers() {\n  try {\n    const response = await fetch('http://localhost:3000/api/users', {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Falha ao buscar usuários');\n    }\n    return await response.json();\n  } catch (error) {\n    console.error('Erro ao buscar usuários:', error);\n    throw error;\n  }\n}","map":{"version":3,"names":["createUser","user","response","fetch","method","headers","body","JSON","stringify","ok","errorData","json","status","Error","message","statusText","error","console","fetchUsers"],"sources":["C:/Ferramenta_Suporte/frontend/src/services/userService.js"],"sourcesContent":["// services/userService.js\r\nexport async function createUser(user) {\r\n    try {\r\n        const response = await fetch('http://localhost:3000/api/users', {\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n            },\r\n            body: JSON.stringify(user),\r\n        });\r\n\r\n        if (!response.ok) {\r\n            const errorData = await response.json();\r\n            if (response.status === 409) {\r\n                throw new Error('Usuário já existe.');\r\n            }\r\n            throw new Error('Falha ao criar usuário: ' + (errorData.message || response.statusText));\r\n        }\r\n\r\n        return await response.json(); // Retorna a resposta do servidor, presumivelmente os dados do usuário criado.\r\n    } catch (error) {\r\n        console.error('Erro ao criar usuário:', error);\r\n        throw error; // Propaga o erro para ser tratado por quem chama essa função.\r\n    }\r\n}\r\n\r\n\r\n\r\nexport async function fetchUsers() {\r\n    try {\r\n        const response = await fetch('http://localhost:3000/api/users', {\r\n            method: 'GET',\r\n            headers: {\r\n                'Accept': 'application/json',\r\n            },\r\n        });\r\n        if (!response.ok) {\r\n            throw new Error('Falha ao buscar usuários');\r\n        }\r\n        return await response.json();\r\n    } catch (error) {\r\n        console.error('Erro ao buscar usuários:', error);\r\n        throw error;\r\n    }\r\n}\r\n"],"mappings":"AAAA;AACA,OAAO,eAAeA,UAAUA,CAACC,IAAI,EAAE;EACnC,IAAI;IACA,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC5DC,MAAM,EAAE,MAAM;MACdC,OAAO,EAAE;QACL,cAAc,EAAE;MACpB,CAAC;MACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAACP,IAAI;IAC7B,CAAC,CAAC;IAEF,IAAI,CAACC,QAAQ,CAACO,EAAE,EAAE;MACd,MAAMC,SAAS,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MACvC,IAAIT,QAAQ,CAACU,MAAM,KAAK,GAAG,EAAE;QACzB,MAAM,IAAIC,KAAK,CAAC,oBAAoB,CAAC;MACzC;MACA,MAAM,IAAIA,KAAK,CAAC,0BAA0B,IAAIH,SAAS,CAACI,OAAO,IAAIZ,QAAQ,CAACa,UAAU,CAAC,CAAC;IAC5F;IAEA,OAAO,MAAMb,QAAQ,CAACS,IAAI,CAAC,CAAC,CAAC,CAAC;EAClC,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;IAC9C,MAAMA,KAAK,CAAC,CAAC;EACjB;AACJ;AAIA,OAAO,eAAeE,UAAUA,CAAA,EAAG;EAC/B,IAAI;IACA,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAAC,iCAAiC,EAAE;MAC5DC,MAAM,EAAE,KAAK;MACbC,OAAO,EAAE;QACL,QAAQ,EAAE;MACd;IACJ,CAAC,CAAC;IACF,IAAI,CAACH,QAAQ,CAACO,EAAE,EAAE;MACd,MAAM,IAAII,KAAK,CAAC,0BAA0B,CAAC;IAC/C;IACA,OAAO,MAAMX,QAAQ,CAACS,IAAI,CAAC,CAAC;EAChC,CAAC,CAAC,OAAOK,KAAK,EAAE;IACZC,OAAO,CAACD,KAAK,CAAC,0BAA0B,EAAEA,KAAK,CAAC;IAChD,MAAMA,KAAK;EACf;AACJ","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}